// Generated by CoffeeScript 1.3.3
(function() {
  var cloud;

  cloud = {
    account_query: 'http://registry.usa.gov/accounts.json?service_id=github&agency_id=&tag=&callback=?',
    repo_query: 'https://api.github.com/users/%s/repos?callback=?',
    max_size: 3,
    min_size: .1,
    counts: [],
    ul: '#tags',
    show_counts: true,
    render: function() {
      var denominator, logMin;
      cloud.min = cloud.calcMin(cloud.counts);
      cloud.max = cloud.calcMax(cloud.counts);
      denominator = Math.log(parseInt(cloud.max)) - Math.log(parseInt(cloud.min));
      logMin = Math.log(cloud.min);
      return jQuery.each(cloud.counts, function(key, agency) {
        var li, size, weight;
        weight = (Math.log(agency.count) - logMin) / denominator;
        size = cloud.min_size + (cloud.max_size - cloud.min_size) * weight;
        li = '<li class="tag" style="font-size:' + size + 'em">' + agency.agency;
        if (cloud.show_counts) {
          li += '<span class="count">(' + agency.count + ')</span> ';
        }
        li += '</li>';
        return jQuery(cloud.ul).append(li);
      });
    },
    getAccounts: function() {
      return jQuery.getJSON(cloud.account_query, function(accounts) {
        return cloud.getRepos(accounts.accounts);
      });
    },
    getRepos: function(accounts) {
      return jQuery.each(accounts, function(key, agency) {
        return jQuery.getJSON(cloud.repo_query.replace('%s', agency.account), function(data) {
          var object;
          object = {
            agency: agency.organization,
            count: data.data.length
          };
          cloud.counts.push(object);
          if (key === accounts.length - 1) {
            return cloud.render();
          }
        });
      });
    },
    calcMin: function(array) {
      var min;
      min = null;
      jQuery.each(array, function(key, obj) {
        if (min === null || obj.count < min) {
          return min = obj.count;
        }
      });
      return min || 1;
    },
    calcMax: function(array) {
      var max;
      max = null;
      jQuery.each(array, function(key, obj) {
        if (max === null || obj.count > max) {
          return max = obj.count;
        }
      });
      return max;
    }
  };

  cloud.getAccounts();

  window.cloud = cloud;

}).call(this);
